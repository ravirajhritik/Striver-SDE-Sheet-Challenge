class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>res;
        int n=nums.size();
        if(n==0)return res;

        sort(nums.begin(),nums.end());

        for(int i=0;i<n;i++){
            long long int target1=target-nums[i];
            for(int j=i+1;j<n;j++){
                long long int target2=target1-nums[j];
                int l=j+1;
                int r=n-1;
                while(l<r){
                    long long int sum=nums[l]+nums[r];
                    if(sum<target2)l++;
                    else if(sum>target2)r--;
                    else{
                        vector<int>quad(4,0);
                        quad[0]=nums[i];
                        quad[1]=nums[j];
                        quad[2]=nums[l];
                        quad[3]=nums[r];

                        res.push_back(quad);
                        //removing duplicates
                        while(l<r && nums[l]==quad[2])l++;
                        while(l<r && nums[r]==quad[3])r--;
                    }
                }
                while(j+1<n && nums[j+1]==nums[j])j++;
            }
            while(i+1<n && nums[i+1]==nums[i])i++;
        }
        return res;
    }
};
