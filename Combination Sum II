class Solution {
private:
    void solve(int i,vector<int>& temp,vector<vector<int>>& ans,int target,vector<int>& arr){
        if(target==0){
            ans.push_back(temp);
            return;
        }
        if(i>=arr.size() || target<0)return;
        if(arr[i]<=target){
            temp.push_back(arr[i]);
            solve(i+1,temp,ans,target-arr[i],arr);
            temp.pop_back();
        }
        while(i<arr.size()-1 && arr[i]==arr[i+1])i++;
        solve(i+1,temp,ans,target,arr);
    }
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        vector<int>temp;
        vector<vector<int>>ans;
        solve(0,temp,ans,target,candidates);
        return ans;
    }
};
